#include <ESP_8_BIT_GFX.h>
float incrementer;
float fishWiggle;
float wiggleAmount;

const unsigned char epd_bitmap_mudfish []  = {
  0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0xc0, 
  0x00, 0x00, 0x00, 0x00, 0x30, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00, 
  0x30, 0x30, 0x00, 0x00, 0x3f, 0x00, 0x0c, 0x0f, 0xfc, 0x00, 0x3f, 0x00, 0x0c, 0x0f, 0xfc, 0x00, 
  0xc0, 0xf0, 0xf0, 0x00, 0x03, 0xc0, 0xc0, 0xf0, 0xf0, 0x00, 0x03, 0xc0, 0x30, 0x0f, 0x00, 0x00, 
  0x00, 0x30, 0x30, 0x0f, 0x00, 0x00, 0x00, 0x30, 0x0c, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x0c, 0x00, 
  0x00, 0x00, 0x03, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x03, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x03, 0x0c, 
  0x03, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x0c, 0x0f, 0xc0, 0x00, 
  0x00, 0x0c, 0x0c, 0x0f, 0xc0, 0x00, 0x00, 0x0c, 0x30, 0x30, 0x3f, 0xcc, 0x00, 0x0c, 0x30, 0x30, 
  0x3f, 0xcc, 0x00, 0x0c, 0x0f, 0xc0, 0x00, 0x30, 0x3f, 0xf0, 0x0f, 0xc0, 0x00, 0x30, 0x3f, 0xf0, 
  0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x3f, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00
  };

// Fish
class circle_fish
{
  public:
    circle_fish(float start_x, float start_y, float start_deltaX, int start_color, float wiggleValue, float wiggleHeight)
    {
      x = start_x;
      y = start_y;
      deltaX = start_deltaX;
      color = start_color;
      fishWiggle = wiggleValue;
      wiggleAmount = wiggleHeight;
    }
   
    void draw(ESP_8_BIT_GFX gfx)
    {
      gfx.drawBitmap(x, y, epd_bitmap_mudfish, 46, 28, color);
     if(x<255){ 
      x += deltaX;
      y+=(sin(incrementer)/wiggleAmount);
      incrementer+=fishWiggle;
     }
       else{
    x=0;
    y=random(20,200);
    incrementer=0;
  }
    }

  private:
    float x, y, deltaX;
    int color;
};
