#include <ESP_8_BIT_GFX.h>
float incrementer2;
float fishWiggle2;
float wiggleAmount2;

const unsigned char epd_bitmap_shark [] = {
  0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xc0, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc3, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc3, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x06, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 
  0x03, 0x06, 0x00, 0x00, 0x7f, 0xfe, 0x3f, 0xff, 0xff, 0xfc, 0x18, 0x00, 0x07, 0x80, 0x18, 0x3f, 
  0xff, 0xff, 0xfc, 0x18, 0x00, 0x07, 0x80, 0x18, 0xc0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xf8, 0x00, 
  0x60, 0xc0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xf8, 0x00, 0x60, 0x30, 0x0f, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x01, 0x80, 0x30, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x0c, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x06, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x03, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x7f, 0x86, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0x86, 0x00, 
  0x00, 0xf0, 0x00, 0x00, 0x00, 0x07, 0x80, 0x61, 0x80, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x07, 0x80, 
  0x61, 0x80, 0x00, 0x0f, 0xf8, 0x19, 0xff, 0xf8, 0x00, 0x1f, 0xe0, 0x00, 0x0f, 0xf8, 0x19, 0xff, 
  0xf8, 0x00, 0x1f, 0xe0, 0x00, 0x00, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x81, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x01, 0x81, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x00, 0x00, 0x00
};

// Fish
class circle_fish2
{
  public:
    circle_fish2(float start_x, float start_y, float start_deltaX, int start_color, float wiggleValue, float wiggleHeight)
    {
      x = start_x;
      y = start_y;
      deltaX = start_deltaX;
      color = start_color;
      fishWiggle2 = wiggleValue;
      wiggleAmount2 = wiggleHeight;
    }
   
    void draw(ESP_8_BIT_GFX gfx)
    {
      gfx.drawBitmap(x, y, epd_bitmap_shark, 71, 26, color);
     if(x>-70){ 
      x -= deltaX;
      y-=(cos(incrementer2)/wiggleAmount);
      incrementer2+=fishWiggle2;
     }
       else{
    x=255;
    y=random(20,200);
    incrementer2=0;
  }
    }

  private:
    float x, y, deltaX;
    int color;
};
